/*
 * This Groovy source file was generated by the Gradle 'init' task.
 */
package mathInt

class App {
    static void addNumToIstack(StringBuilder num, ArrayList<objectStore> istack) {
        if (num.length() > 0) {
            istack.add(new objectStore(num.toInteger(), "num"));
            num.setLength(0)
        }
    }

    static void main(String[] args) {
        String Solve = "55 + 4 *( 2 - 3 ) / 4"
        StringBuilder num = new StringBuilder()

        ArrayList<objectStore> istack = new ArrayList<objectStore>(10)

        for (int i = 0; i < Solve.length(); i++) {
            if (Solve[i].equals("+")) {

                addNumToIstack(num, istack)
                istack.add(new objectStore(null, "+"))

            } else if (Solve[i].equals("-")) {
                addNumToIstack(num, istack)
                istack.add(new objectStore(null, "-"))
            } else if (Solve[i].equals("*")) {
                addNumToIstack(num, istack)
                istack.add(new objectStore(null, "*"))
            } else if (Solve[i].equals("/")) {
                addNumToIstack(num, istack)
                istack.add(new objectStore(null, "/"))
            }

            else if (Solve[i].equals("(")) {
                addNumToIstack(num, istack)
                istack.add(new objectStore(null, "("))
            }
            else if (Solve[i].equals(")")) {
                addNumToIstack(num, istack)
                istack.add(new objectStore(null, ")"))
            }

            else if (!Solve[i].equals(" ")) {
                num.append(Solve[i])

            }

            for (ob in istack) {
                println(ob.value.toString() + " " + ob.type.toString())
            }
            println()
        }
    }
}

// 55 + 4 *( 2 - 3 )
// limited to + - * / or an integer
//no letters or bullshit first

class objectStore {
    public Integer value
    public String type; // will likley change to enum

    objectStore(Integer value, String type) {
        this.value = value
        this.type = type
    }

}